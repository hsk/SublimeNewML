// [PackageDev] target_format: plist, ext: tmLanguage

{ "name": "NewML",
	"scopeName": "source.newml",
  "fileTypes": ["nml"],
  "foldingStartMarker": "/\\*\\*|\\{\\s*$",
  "foldingStopMarker": "\\*\\*/|^\\s*\\}",
  "patterns": [
        { "match": "\\b(open|def|if|else|case|match|type)\\b",
          "name": "keyword.newml",
          "comment": "keywords"
        },
        { "match": "\\b(int|string|list|unit)\\b",
          "name": "support.function.newml",
          "comment": "type"
        },
        { "match": "\\b([0-9]+)",
          "name": "constant.numeric.newml",
          "comment": "type"
        },

        
        { "match": "\\b([A-Z][a-zA-Z_0-9\\.]*)\\b",
          "name": "entity.name.function.newml",
          "comment": "type"
        },
        { "begin": "/\\*", "end": "\\*/",
          "name": "comment.block.newml",
          "comment": "block comment"
        },
        { "begin": "\"", "end": "\"",
          "name": "string.newml",
          "comment": "block comment"
        },
        { "match": "([a-zA-Z_][a-zA-Z_0-9]*) *((\\(([^\\)]*?) *\\) *)*)([:]=?)",
          "captures": {
                "1": { "name": "variable.parameter.newml" },
                "2": { "name": "entity.name.function.newml" },
                "5": { "name": "entity.name.function.newml" }
          },
          "comment": "type"
        },
        { "match": "((\\{|^)[\\s]*\\(([^\\)]*?) *\\) *|(\\w+) *)*(=>)",
          "captures": {
                "3": { "name": "entity.name.function.newml" },
                "4": { "name": "entity.name.function.newml" },
                "5": { "name": "entity.name.function.newml" }
          },
          "comment": "type"
        },
        { "match": "[\\+\\-\\*/=<>:.\\|&#]+",
          "name": "keyword.newml",
          "comment": "operators"
        }
  ],

  "uuid": "2b984fb6-88fd-4d1a-805b-30071426dbcf"
}
